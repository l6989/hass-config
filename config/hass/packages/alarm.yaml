alarm_control_panel:
  - platform: manual_mqtt
    name: HA Alarm (MQTT)
    state_topic: homeassistant/alarm
    command_topic: homeassistant/alarm/set
    code: !secret alarm_code
    pending_time: 0
    trigger_time: 20
    delay_time: 30
    disarm_after_trigger: false
    disarmed:
      trigger_time: 0


automation:
  - alias: Arm alarm when we are away
    initial_state: true
    trigger:
      - platform: state
        entity_id: group.main_mobile_devices
        to: not_home
        for:
          minutes: 3
    action:
      - service: script.alarm_arm_away

  - alias: Door/Window sensor triggered
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.door_window_sensor_bedroom_terrace_door
          - binary_sensor.door_window_sensor_front_door
          - binary_sensor.door_window_sensor_fridge_door
          - binary_sensor.door_window_sensor_terrace_door
          - binary_sensor.door_window_sensor_bedroom_window
          - binary_sensor.door_window_sensor_office_window_large
          - binary_sensor.door_window_sensor_kitchen_window
          - binary_sensor.door_window_sensor_office_window_small
          - binary_sensor.door_window_sensor_living_room_window
        to: 'on'
    condition:
      - condition: state
        entity_id: alarm_control_panel.ha_alarm_mqtt
        state: armed_away
    action:
      - service: alarm_control_panel.alarm_trigger
        entity_id: alarm_control_panel.ha_alarm_mqtt
      - service: notify.get_to_me
        data_template:
          message: >
            {{ trigger.to_state.attributes.friendly_name }}
            has been opened

  - alias: Motion Detector triggered
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.bathroom_motion_motion_sensor
          - binary_sensor.hallway_motion_motion_sensor
          - binary_sensor.kitchen_motion_motion_sensor
          - binary_sensor.toilet_motion_motion_sensor
          - binary_sensor.motion_sensor_front_door
          - binary_sensor.motion_sensor_terrace
          - binary_sensor.motion_sensor_office
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: alarm_control_panel.ha_alarm_mqtt
          state: armed_away
        - condition: template
          value_template: >
            {# Ignore all but the terrace motion sensor when the roomba is running #}
            {% if states.vacuum.nimbus.state == "on" %}
              {{ trigger.entity_id == "binary_sensor.motion_sensor_terrace" }}
            {% endif %}
    action:
      - service: alarm_control_panel.alarm_trigger
        entity_id: alarm_control_panel.ha_alarm_mqtt
      - service: notify.get_to_me
        data_template:
          message: >
            {{ trigger.to_state.attributes.friendly_name }}:
            Motion has been detected

  - alias: Trigger an alert when zoneminder picks up a new event
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.c1_events
      - platform: state
        entity_id: sensor.c2_events
      - platform: state
        entity_id: sensor.doorpi_events
      - platform: state
        entity_id: sensor.winpi_events
      - platform: state
        entity_id: sensor.hassistant_events
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: alarm_control_panel.ha_alarm_mqtt
          state: armed_away
        - condition: template
          value_template: >
            {# Skip if new or old state  is unknown #}
            {% if trigger.from_state.state == 'unknown' %}
              false
            {% elif trigger.to_state.state == 'unknown' %}
              false
            {% else %}
              {# Ignore when the roomba is running #}
              {% if states.vacuum.nimbus.state == 'on' %}
                false
              {% else %}
                {# Event count increased #}
                {{ trigger.from_state.state | int < trigger.to_state.state | int }}
              {% endif %}
            {% endif %}
    action:
      - service: alarm_control_panel.alarm_trigger
        entity_id: alarm_control_panel.ha_alarm_mqtt
      - service: notify.get_to_me
        data_template:
          message: >
            ALERT: Camera {{ trigger.to_state.attributes.friendly_name | replace("Events", "", 1) }} has detected motion
      - service: script.send_snapshot
        data_template:
          # sensor.hassistant_events -> hassistant
          camera: >
            {{ trigger.entity_id | replace("sensor.", "", 1) | replace("_events", "", 1) }}


  - alias: Notify when a new platform has been discovered
    initial_state: true
    trigger:
      - platform: event
        event_type: platform
    action:
      service: notify.smsr
      data_template:
        message: "Home Assistant has discovered a new device (platform): {{ service }}.{{ discovered }}"
        target: me

  - alias: Away armed
    initial_state: true
    trigger:
      - platform: state
        entity_id: alarm_control_panel.ha_alarm_mqtt
        to: armed_away
    action:
      - service: script.alarm_armed_away

  - alias: Alarm disarmed
    initial_state: true
    trigger:
      - platform: state
        entity_id: alarm_control_panel.ha_alarm_mqtt
        to: disarmed
    action:
      - service: script.alarm_disarmed

  - alias: Alarm has been triggered
    initial_state: true
    trigger:
      - platform: state
        entity_id: alarm_control_panel.ha_alarm_mqtt
        to: triggered
    action:
      - service: script.alarm_triggered

  - alias: Someone is home and the alarm is on
    initial_state: true
    trigger:
      - platform: state
        entity_id: group.pschmitt_location
        to: home
    condition:
      - condition: state
        entity_id: alarm_control_panel.ha_alarm_mqtt
        state: armed_away
    action:
      - service: notify.html5
        data_template:
          message: "You are home and the alarm is on."
          data:
            tag: "homecoming-alarm-on"
            actions:
              - action: disable_alarm
                # mdi:bell-off
                icon: https://materialdesignicons.com/api/download/69686D8F-75FE-4091-9061-88DB64D95C01/000000/1/FFFFFF/0/48
                title: Disable alarm
              - action: alarm-homeinvasion
                # mdi:stethoscope
                icon: https://materialdesignicons.com/api/download/641202BA-294A-4A0F-851D-FB83FEC9D7EE/000000/1/FFFFFF/0/48
                title: Kidnappers are here

  - alias: Alarm disarm requested
    initial_state: true
    trigger:
      platform: event
      event_type: html5_notification.clicked
      event_data:
        action: disable_alarm
    action:
      - service: script.alarm_disarm

  - alias: Kidnapping mode requested
    initial_state: true
    trigger:
      platform: event
      event_type: html5_notification.clicked
      event_data:
        action: alarm-homeinvasion
    action:
      - service: script.call_for_help


script:
  alarm_disarm:
    alias: 'Disable alarm'
    sequence:
      - service: alarm_control_panel.alarm_disarm
        data:
          code: !secret alarm_code

  call_for_help:
    alias: 'Call for help'
    sequence:
      - service: notify.html5
        data:
          message: "The police is on its way"

  alarm_arm_away:
    alias: 'Activate away alarm'
    sequence:
      - service: notify.html5
        data:
          message: "Everybody left. Alarming away."
          data:
            tag: 'alarm-arming'
      - service: alarm_control_panel.alarm_arm_away
        data:
          code: !secret alarm_code
      - service: script.lock_door

  alarm_armed_away:
    alias: 'Away alarm activated'
    sequence:
      - service: mqtt.publish
        data:
          topic: homeassistant/alarm/set
          payload: ARM_AWAY
          retain: True
      # Ensure Arlo base station is in armed mode
      # - service: script.arlo_arm
      - service: homeassistant.turn_on
        data:
          entity_id: group.modect
      - service: alarm_control_panel.alarm_arm_away
        entity_id: alarm_control_panel.aarlo_arlomio
      - service: notify.html5
        data:
          message: "Alarm armed (away)"
          data:
            tag: 'alarm-armed-away'

  alarm_disarmed:
    alias: 'Alarm disarmed'
    sequence:
      - service: mqtt.publish
        data:
          topic: homeassistant/alarm/set
          payload: DISARM
          retain: True
      # Ensure Arlo base station is disarmed
      # - service: script.arlo_disarm
      - service: homeassistant.turn_off
        data:
          entity_id: group.modect
      - service: notify.html5
        data:
          message: "Alarm disarmed"
          data:
            tag: 'alarm-disarmed'
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.aarlo_arlomio

  alarm_triggered:
    alias: 'Alarm triggered'
    sequence:
      - service: script.tts_say
        data:
          message: "Alarm triggered"
          language: "en"
      - service: notify.html5
        data:
          message: "Alarm triggered"
          data:
            tag: 'alarm-triggered'
      - event: LOGBOOK_ENTRY
        event_data:
          name: Alarm
          message: has been triggered
          domain: alarm


homeassistant:
  customize:
    script.alarm_disarmed:
      icon: mdi:lock-open
    script.alarm_arm_away:
      icon: mdi:lock
    script.alarm_armed_away:
      icon: mdi:lock-plus
    script.alarm_triggered:
      icon: mdi:alert-circle

# vim: set filetype=yaml et sw=2 ts=2 :
