automation:
  - alias: React to our homecoming
    initial_state: false
    trigger:
      platform: state
      entity_id: group.main_mobile_devices
      from: not_home
      to: home
    action:
      service: input_boolean.turn_off
      data:
        entity_id: input_boolean.vacation

  - alias: Away for more than 24hours
    initial_state: true
    trigger:
      platform: state
      entity_id: group.main_mobile_devices
      to: not_home
      for:
        hours: 24
    action:
      service: input_boolean.turn_on
      data:
        entity_id: input_boolean.vacation

  - alias: We left
    initial_state: true
    trigger:
      - platform: state
        entity_id: group.main_mobile_devices
        to: not_home
        for:
          minutes: 3
    action:
      - service: notify.html5
        data:
          message: "You (all) left. Should I turn everything off?"
          data:
            tag: "all-left-query"
            actions:
              - action: all_off
                icon: https://materialdesignicons.com/api/download/icon/png/C945D203-9737-4C25-87CA-29D97B862DD2/48
                title: "Turn it all off"

  - alias: Turn on lights before sunset
    initial_state: true
    trigger:
      platform: sun
      event: sunset
      offset: "-00:45:00"
    condition:
      condition: state
      entity_id: group.main_mobile_devices
      state: home
    action:
      - service: light.turn_on
        entity_id: light.living_room
        data:
          color_name: white
          brightness: 150
          transition: 10

  - alias: Open some covers 15min before sun rises
    initial_state: true
    trigger:
      platform: sun
      event: sunrise
      offset: "-00:15:00"
    condition:
      condition: and
      conditions:
        - condition: time
          after: '08:30:00'  # else: go to next automation
        - condition: state
          entity_id: input_boolean.sleepover
          state: 'off'
        - condition: state
          entity_id: group.main_mobile_devices
          state: home
    action:
      - service: script.open_auto_covers

  - alias: Open some covers at 07:30
    initial_state: true
    trigger:
      platform: time
      at: '08:30:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.sleepover
          state: 'off'
        - condition: state
          entity_id: group.main_mobile_devices
          state: home
    action:
      - service: script.open_auto_covers

  - alias: Open bedroom covers at 14:00
    initial_state: true
    trigger:
      platform: time
      at: '14:00:00'
    # trigger:
    #   platform: template
    #   value_template: '{{ states.sensor.time.state == (states.input_datetime.bedroom_covers.attributes.timestamp | int | timestamp_custom("%H:%M", False)) }}'
    condition:
      condition: state
      entity_id: group.main_mobile_devices
      state: home
    action:
      - service: script.open_bedroom_covers

  - alias: Shut the covers when the sun sets
    initial_state: true
    trigger:
      platform: sun
      event: sunset
      offset: '+01:00:00'
    action:
      - service: script.close_main_covers

  - alias: "Ask to let me in when approaching home"
    initial_state: false
    trigger:
      - platform: numeric_state
        entity_id: proximity.home
        below: 60
    condition:
      condition: state
      entity_id: group.pschmitt_location
      # entity_id: device_tracker.ph1_ping
      state: not_home
    action:
      - service: notify.html5
        data:
          message: "You are approaching home. Are you going home?"
          data:
            tag: 'let-me-in-query'
            renotify: true
            actions:
              - action: let_me_in
                icon: https://materialdesignicons.com/api/download/icon/png/E357D5CD-7E42-463B-899A-7D7B038A3E31/48
                title: "Let me in"

  - alias: "HTML5 notification: Let me in"
    initial_state: true
    trigger:
      platform: event
      event_type: html5_notification.clicked
      event_data:
        action: let_me_in
    action:
      - service: script.let_me_in

  - alias: "HTML5 notification: Bedtime - all off"
    initial_state: true
    trigger:
      platform: event
      event_type: html5_notification.clicked
      event_data:
        action: bedtime_all_off
    action:
      - service: script.all_off

  - alias: "HTML5 notification: Bedtime - bedtime"
    initial_state: true
    trigger:
      platform: event
      event_type: html5_notification.clicked
      event_data:
        action: bedtime_bedtime
    action:
      - service: script.bedtime

  - alias: Having friends sleeping on the couch
    initial_state: true
    trigger:
      platform: state
      entity_id: input_boolean.sleepover
    action:
      - service_template: >
          {% if states.input_boolean.sleepover.state == 'on' %}
            automation.turn_off
          {% else %}
            automation.turn_on
          {% endif %}
        entity_id: automation.turn_on_front_door_light_when_i_get_up_in_the_morning

  - alias: Train reminder
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: 16
        minutes: 25
        seconds: 0
    condition:
      - condition: state
        # entity_id: device_tracker.google_maps_111748235994603810778
        entity_id: group.pschmitt_location
        state: work
    action:
      service: script.train_reminder

  - alias: Train reminder postpone requested
    initial_state: true
    trigger:
      platform: event
      event_type: html5_notification.clicked
      event_data:
        action: postpone_train_reminder
    action:
      - delay: 01:00:00
      - service: script.train_reminder

  - alias: Time to go to bed
    initial_state: true
    trigger:
      # - platform: time_pattern
      #   hours: 21
      #   minutes: 50
      #   seconds: 0
      platform: template
      value_template: '{{ states.sensor.time.state == (states.input_datetime.bedtime.attributes.timestamp | int | timestamp_custom("%H:%M", False)) }}'
    condition:
      condition: and
      conditions:
        - condition: state
          # entity_id: device_tracker.google_maps_111748235994603810778
          entity_id: group.pschmitt_location
          state: home
        - condition: time
          after: '21:00:00'
          weekday:
            - mon
            - tue
            - wed
            - thu
            - sun
    action:
      - service: script.bedtime_reminder

  - alias: "Turn off terrace video capture when I get up"
    initial_state: true
    trigger:
      platform: state
      entity_id:
        - binary_sensor.bathroom_motion_motion_sensor
        - binary_sensor.hallway_motion_motion_sensor
        - binary_sensor.kitchen_motion_motion_sensor
        - binary_sensor.toilet_motion_motion_sensor
      to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: alarm_control_panel.arlomio
          state: 'Night'
        - condition: time
          after: '05:00:00'
          before: '11:30:00'
        - condition: state
          entity_id: group.pschmitt_location
          state: 'home'
    action:
      - service: script.arlo_disarm


script:
  let_me_in:
    alias: 'Let me in!'
    sequence:
      - service: script.unlock_door
      - service: script.homecoming_lights
      - service: script.alarm_disarm
      - service: script.open_all_covers_if_sun_is_up
      - service: cover.open_cover
        entity_id: cover.living_room_door

  homecoming_lights:
    alias: "Turn on homecoming lights if it is dark"
    sequence:
      - condition: sun
        after: sunset
        after_offset: '-00:45:00'
      # - condition: state
      #   entity_id: sun.sun
      #   state: 'below_horizon'
      - service: notify.html5
        data:
          message: "Turning on the homecoming light scene"
      - service: scene.turn_on
        entity_id: scene.homecoming_lights

  bedtime_reminder:
    sequence:
      - service: notify.html5
        data:
          message: "It's bedtime. Turn it all off?"
          data:
            tag: 'bedtime-query'
            renotify: True
            actions:
              - action: bedtime_all_off
                icon: https://materialdesignicons.com/api/download/icon/png/DB44684C-B1E7-4039-8BAA-C7C0BC4EB075/48
                title: "All off"
              - action: bedtime_bedtime
                icon: https://materialdesignicons.com/api/download/icon/png/EA62EF73-ACC7-4E54-87EF-D5E1683BE58F/48
                title: "Bedtime"
      - service: script.tts_say
        data:
          message: "C'est l'heure!"
      - service: script.flash_lights

  train_reminder:
    sequence:
      service: notify.html5
      data:
        message: 'Time to leave for your train'
        data:
          tag: "train-reminder"
          actions:
            - action: postpone_train_reminder
              icon: https://materialdesignicons.com/api/download/28F85724-265B-4C24-9975-DDDF788A99E5/000000/1/FFFFFF/0/48
              title: Postpone


scene:
  - name: Homecoming lights
    entities:
      light.front_door:
        state: on
        transition: 3
        brightness: 150
        xy_color: [ 0.4448, 0.4066 ]
      light.living_room:
        state: on
        transition: 3
        brightness: 150
        xy_color: [ 0.4448, 0.4066 ]


homeassistant:
  customize:
    script.she_is_home:
      icon: mdi:home-map-marker

# vim: set filetype=yaml et sw=2 ts=2 :
